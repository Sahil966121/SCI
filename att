1.	Yeshwanth number
#include<stdio.h>
int fact(int d)
{
	int fact=1;
	while(d>0)
	{
		fact*=d;
		d--;
	}
	return fact;
}
int strong(int num)
{
  int sum=0,temp=num;
  while(temp>0)
  {
  	int digit=temp%10;
  	sum+=fact(digit);
  	temp/=10;
  }
  if(sum==num)
   return 1;
  else
    return 0;
}
int main()
{
	int n,x;
	printf("Enter a number : ");
	scanf("%d",&n);
	x=strong(n);
	if(x)
	 	printf("Yes\n");
	else
	 	printf("No\n");
	
}
Problem 2		
Input								Output
7894							 Four Nine Eight Seven
1592							 Two Nine Five One
1369							 Nine Six Three One

#include<stdio.h>
int main()
{
	int num,rev=0,d;
	scanf("%d",&num);
	while(num>0)
	{
		d=num%10;
		if(d==1)
              		      printf("One ");
		else if(d==2)
		      printf("Two ");
		else if(d==3)
		      printf("Three ");
		else if(d==4)
		       printf("Four ");
		else if(d==5)
		      printf("Five ");		
		else if(d==6)
		     printf("Six ");
		else if(d==7)
	  	      printf("Seven ");
		else if(d==8)
		     printf("Eight ");
		else if(d==9)
		     printf("Nine ");
                             else
                                   printf(“Zero”);
		num/=10;
	}
}
2.	Seating arrangement problem
#include<stdio.h>
int main()
{
	int num,d,ans;
	char st[2];
	scanf("%d",&num);
	d=num%8;
	if(d==0){
	ans=num-1;
	st[0]='S';
	st[1]='L';
   }
   else if(d==1){
	ans=num+3;
	st[0]='L';
	st[1]='B';
   }
   else if(d==2){
	ans=num+3;
	st[0]='M';
	st[1]='B';
   }
   else if(d==3){
	ans=num+3;
	st[0]='U';
	st[1]='B';
   }
   else if(d==4){
	ans=num-3;
	st[0]='L';
	st[1]='B';
   }
   else if(d==5){
	ans=num-3;
	st[0]='M';
	st[1]='B';
   }
   else if(d==6){
	ans=num-3;
	st[0]='U';
	st[1]='B';
   }
   else if(d==7){
	ans=num+1;
	st[0]='S';
	st[1]='U';
   }
   printf("%d%s",ans,st);
}
Problem 1:
Input									Output
10,25,9									25,9
11, 98, 105								105, 11
Description :- Print the Higher and lower number from given three numbers.
#include<stdio.h>
int main()
{
	int num1,num2,num3;
	scanf("%d %d %d",&num1,&num2,&num3);
	int max=num1>num2&&num1>num3?num1:num2>num2?num2:num3;
	int min=num1<num2&&num1<num3?num1:num2<num3?num2:num3;
   printf("%d %d",max,min);
}

Problem 2:
Input								Output
145								20
120								0
1889								576
Description : Print the multiplication of digits in a given number. For example, test case1, 145 if you multiply 1*4*5 you will get the output as 20.
#include<stdio.h>
int main()
{
	int digit,num,prod=1;
	scanf("%d",&num);
	while(num>0)
	{
		digit=num%10;
		prod*=digit;
		num/=10;
	}
	printf("%d",prod);
}
3.	The program must accept an integer array of size N containing only 0's and 1's as the input. The program must bring all the zeros to the front and all the ones to the end of the array. Then the program must print the modified array as the output
Input								Output
0  1  1 0  1  0  0							0  0 0  1  1   1
1 1 1  0								0  1  1   1
#include<stdio.h>
int main()
{
	int ar[100],n,i;
	scanf("%d",&n);
	for(i=0;i<n;i++)
	 scanf("%d",&ar[i]);
	int c1=0,c2=0;
	for(i=0;i<n;i++)
	 if(ar[i]==0)
	  c1++;
	 else
	  c2++;
	for(i=0;i<c1;i++)
	printf("0 ");
	for(i=0;i<c2;i++)
	printf("1 ");
}
Problem-1:
  Input								Output
{1,2,4,6,5}						       1  4  12  20  5
{2,4,5,6,7}						      2 10 24 35 7
#include<stdio.h>
int main()
{
	int a[100];
	int I, n;
            printf(“Enter the size of array : “);
            scanf(“%d”,&n);
            printf(“Enter array values : “);
            for(i=0;i< n;i++)
            {
                     scanf(“%d”,&a[i]);
            }
	for(i=0;i<n;i++)
	{
		if(i==0||i==4)
		   printf("%d ",a[i]);
		else
		   printf("%d ",a[i-1]*a[i+1]);
	}
}
Problem-2:
Input									Output
{19,1,24,79,88}       							1 1 0 1 0
{11,22,44,33,66}					                             1 0 1 0 1
Description :-You need to print 1 in place of Odd item and print 0 in the place of Even item from the given list.
#include<stdio.h>
int main()
{
	int ar[100],n,i;
              printf(“Enter the size of array : “);
	scanf("%d",&n);
               printf(“Enter array values : “);
	for(i=0;i<n;i++){
	      scanf("%d",&ar[i]);
              }
               for(i=0;i<n;i++)
               {
         	      if(ar[i]%2==0)
	            printf("0 ");
	      else
	           printf("1 ");
               }
}
4.	The program must accept an integer N as the input. The program must print the square root of each digit in N with the precision up to 2 decimal places as the output.
    Input									Output
   23578								      1.41 1.73 2.24 2.65 2.83
   149								     1.00 2.00 3.00
#include<stdio.h>
#include<math.h>
int main()
{
	int num,r;
	scanf("%d",&num);
	while(num>0)
	{
		r=num%10;
		printf(“%.2f”,sqrt(r));
		num/=10;
	}
 }

Problem-1:
Input								Output
{10 20 12 18 90}						Yes
{10 20 12 18 19} 						No
Description :-You need to print Yes or No according to the given test case. For example, test case 1, 20 12 18 - all three are greater than 10 and lesser than 90. Hence YES is printed. For second test case, 20 is not lesser than 19. Hence NO is printed.
#include<stdio.h>
int main()
{
    int flag=1,check=1,ar[100],n,i;
	scanf("%d",&n);
	for(i=0;i<n;i++)
	 scanf("%d",&ar[i]);
	for(i=1;i<n-1;i++)
	{
		if(ar[0]>ar[i])
		{
			flag=0;
			break;
		}
		if(ar[n-1]<ar[i])
		{
			check=0;
			break;
		}
	}
	if(flag && check)
	printf("Yes");
	else
	printf("No");
	
}
5.	Your program need to accept the series of integer numbers as an array and it has to print the output in the following order.
     Input								Output
{1,2,3,4,2,2,3}, Target Number 2				                              !! !!!!! !!!!!!
Explanation:-Your program needs to search for the key in the given array and when it is found the in the list it needs to print the position. According to the position we need to print the output with ! Sign.
#include<stdio.h>
int main()
{
       int ar[100],n,i,x;
        printf(“Enter the size of Array : “);
        scanf("%d",&n);
        printf(“Enter the array elements\n”);
        for(i=0;i<n;i++)
        {
 	 scanf("%d",&ar[i]);
       }
       printf(“Enter the target element : “);
       scanf("%d",&x);
       for(i=0;i<n;i++)
       {
	 if(ar[i]==x)
	 {
	      int j=i+1;
	      while(j>0)
	      {
	  	   printf("!");
		   j--;
	       }
	       printf(" ");
	}
         }
}

6.	Your program need to accept a string (alphanumeric) includes white spaces also.
       Input								Output
    application Testing  						              TESTING
    sit Test app 								TEST
    H e be o n								E
   Explanation :-Your program needs to print the second word in upper case format from the given input. For the test case 1, find first white space and print the next to it and stop it when the next white space occurs. By using ASCII values, if the range is between 65 to 90 then print the character same, if the character ASCII between the range of 97 to 122 then convert that into upper case and print the character.
#include<stdio.h>
int main()
{
    char st[100];
     int i,j,key;
    scanf("%[^\n]s",st); //Read a string with space
    for(i=0;st[i]!=’ ‘;i++);
    for(key=i+1;st[key]!=' ';key++)
    {
    	if(st[key]>=97 && st[key]<=122)
              {
                    st[key]=st[key]-32;
                    printf("%c",st[key]);
              }
               else
                     printf(“%c”,st[key]);
     }
}
Problem 1:
Input							Output
Appl18ication89					1889
Woring147  						147
Explanation :-Given string is alphanumeric; You need to extract the digits from the given string. For test case 1, Appl18ication89 having the digits as 1889 so you need to print that as output.
#include<stdio.h>
int main()
{
    char st[100];
    int i;
    printf("Enter String : ");
    scanf("%s",st);
    for(i=0;st[i]!='\0';i++)
    {
    	if(st[i]>='0'&&st[i]<='9')
    	 printf("%c",st[i]);
     }
}

Problem 2:
Input							Output
Application						5
testing							2
Description :-Given string is lower case string, You need to find the vowels count
#include<stdio.h>
int main()
{
       char st[100];
       int I,vowels=0;
       printf(“Enter a String : “);
       scanf(“%s”,st);
       for(i=0;st[i]!=’\0’;i++)
       {
            if(st[i]==’a’||st[i]==’e’||st[i]==’i’||st[i]==’o’||st[i]==’u’);
                 vowels++;
       }
       printf(“%d”,vowels);
}	


7.	he program must accept an integer N as the input. The program must print the Fibonacci series in the reverse order as the output.
      Input							Output
      --------------------------------------------------------------------------------------------
      5								3 2 2 1 0
     12								89 55 34 21 13 8 5 3 2 1 1 0
     #include<stdio.h>
     int main()
     {
int i,n,k=2,l1=0,l2=1,l3;
int ar[100];
ar[0]=0;
ar[1]=1;
printf(“Enter No. of elements in series : “);
scanf("%d",&n);
for(i=2;i<n;i++)
{
	l3=l1+l2;
	ar[k]=l3;
	l1=l2;
	l2=l3;
	k++;
}
for(i=k-1;i>=0;i--)
printf("%d ",ar[i]);
}



8. The program must accept an integer N as the input. The program must print count of prime numbers
Input								Output
10,30                                                                                      6- [11,13,17,19,23,29]
10,100                                                                                    21- [11,13,17,19,23,29 ….]     
#include<stdio.h>
#include<math.h>
int prime(int num)
{
int i,flag=1;
for(i=2;i<=sqrt(num);i++)
{
	if(num%i==0)
	{
		flag=0;
		break;
	}
}
if(flag)
	return 1;
else
	return 0;
   
}
int main()
{
      int i,l1,l2,count=0;
      printf(“Enter start and end values : “);
      scanf("%d %d",&l1,&l2);
      for(i=l1;i<=l2;i++)
      {
  	if(prime(i))
  	count++;
      }
  printf("%d",count);
 }



















Part – B
1. Write a C program to implement STACK to perform the PUSH, POP and DISPLAY operations. [Implement the 10 size]
#define MAX_SIZE 10
#include<stdio.h>
int stack[MAX_SIZE];
int top=-1;
void push(int);
void pop();
void display();
int main()
{
   push(10);
   push(20);
   push(30);
   push(40);
   printf("\nStack after pushing elements\n");
   display();
   pop();
   pop();
   printf("\nStack after removing elements\n");
   display();
 }
 void push(int num)
 {
    if(top==MAX_SIZE-1)
    {
      printf("\nStack is full\n");
      return;
    }
    printf("\nPushing element : %d\n",num);
    top++;
    stack[top]=num;
 }
 void pop()
 {
      int item;
      if(top<0)
      {
         printf("\nStack is empty\n");
         return;
      }
      item=stack[top];
      printf("\nItem popped : %d\n",item);
      top--;
}  
void display()
{
	int i;
	for(i=top;i>=0;i--)
	{
		printf("%d\n",stack[i]);
	}
}

2.	Write a C program to implement ordinary QUEUE to perform the insertion, deletion and display operations. [Operations with Array size of 12].
#include<stdio.h>
#include<stdlib.h>
#define MAX_SIZE 12
void enqueue();
void dequeue();
void display();
int front=-1,rear=-1;
int queue[MAX_SIZE];
int main()
{
	int choice;
	while(choice!=4)
	{
		printf("\n1. Add item to Queue");
		printf("\n2. Remove element from Queue");
		printf("\n3. Display Queue");
		printf("\n4. Exit");
		printf("\nEnter Choice between [1-4] : ");
		scanf("%d",&choice);
		
		switch(choice)
		{
			case 1:
				enqueue();
			break;
			case 2:
				dequeue();
			break;
			case 3:
				display();
			break;
			case 4:
				exit(0);
			default:
				printf("\nInvalid Choice..");
		}
	}
}
void enqueue()
{
	int item;
	if(rear==MAX_SIZE-1)
	{
		printf("\nQueue Overflow..");
		return;
	}
	printf("Enter the item");
	scanf("%d",&item);
	if(front=-1 && rear==-1)
	{
		front=0;
		rear=0;
	}
	else
	{
		rear=rear+1;
	}
	queue[rear]=item;
	printf("\nValue inserted..");
}
void dequeue()
{
	int item;
	if(front==-1 || front>rear)
	{
		printf("\nQueue Underflow");
		return;
	}
	else
	{
		item=queue[front];
		if(front==rear)
		{
			front=-1;
			rear=-1;
		}
		else
		{
			front=front+1;
		}
		printf("\nItem Deleted");
	}
}
void display()
{
	int i;
	if(rear==-1)
	{
		printf("\nQueue Empty");
	}
	else
	{
		for(i=front;i<=rear;i++)
		{
			printf("%d\t",queue[i]);
		}
	}
}

3.Your Program need to accept the alphanumeric string and you have print the output in the following manner Hebeon Tech -- V: 4 C: 6 W: 1
#include<stdio.h>
#include<string.h>
int main()
{
      char st[100];
      int i,vowels=0,cons=0,words=0;
      printf(“Enter a String : “);
      scanf(“%[^\n]s”,st);
      strlwr(st);
      for(i=0;st[i]!=’\0’;i++)
      {
           if(st[i]==’ ‘)
                 words++;
          else
               if(st[i]==’a’||st[i]==’e’||st[i]==’i’||st[i]==’o’||st[i]==’u’)
                    vowels++;
               else
                   cons++;
      }
      printf(“ V: %d C: %d W: %d”,vowels,cons,words);
}
        
Example 1
Input								Output
mango tes							ae
								ns
								g*	
							               o*
run working							uo
								nr
								*k
                         							*i
								*n
								*g
#include<stdio.h>
#include<string.h>
int main()
{
	char st1[100],st2[100];
	scanf("%s %s",st1,st2);
	int l1,l2,i,len;
	l1=strlen(st1);
	l2=strlen(st2);
    if(l1>l2)
      len=l1;
    else
      len=l2;
	for(i=1;i<len;i++)
    {
       if(st1[i]!='\0')
            printf("%c",st1[i]);
        else
           printf("*");
       if(st2[i]!='\0')
           printf("%c\n",st2[i]);
        else
           printf("*\n");
    }
}
Example-2
Input								Output
Application  Target: 4	          				             Applicanoit
Explanation :-You need reverse the k characters in the reverse order from the right side of the given array. For the given test last four characters are tion when they reversed noit. So you need print those characters in reverse order and first characters will be same.
#include<stdio.h>
#include<string.h>
int main()
{
	char str[100];
	int i,target,pos;
	printf("Enter string : ");
	scanf("%s",str);
	printf("Enter the targer position");
	scanf("%d",&target);
	pos=strlen(str)-target;
	for(i=0;i<pos;i++)
    {
    	printf("%c",str[i]);
	}
	for(i=strlen(str)-1;i>=pos;i--)
	{
		printf("%c",str[i]);
	}
}
  
     
4. Mr Jack has created a rectangle box with some rows(r) and columns(c). He has placed different numbers on the rectangle box in each cell. Now Jack wants to find out all the numbers that are not placed in the edges and further Jack wants to add those numbers to get a single result as output i.e. Jack wants the numbers that have a number above, a number below to it, the number on the left and a number on the right.
Input									Output
18  5    5    21							
23  24  1   25								 45
8    5    15  17
23  4    29  2

Explanation :-The elements which are not present along the border are 24 1 5 15.
Hence the output is 24+1+5+15 = 45.
#include<stdio.h>
int main()
{
	int i,j,row,col;
	int ar[100][100];
	scanf("%d %d",&row,&col);
	for(i=0;i<row;i++)
		for(j=0;j<col;j++)
		scanf("%d",&ar[i][j]);
	int sum=0;
	for(i=0;i<row;i++)
		for(j=0;j<col;j++)
		{
			if(!(i==0 || i==row-1 || j==0 || j==col-1)){
			sum+=ar[i][j];
		   }
		}
	printf("%d",sum);
}

Problem 1:
Input									Output
1 2 3       
4 5 6                     							15
7 8 9
Description :-You need to identify the diagonal elements from the given multi-dimensional array and print the sum of them. For the given test you need add the diagonal elements 1 + 5 + 9 -- 15.
#include<stdio.h>
int main()
{
	int i,j,row,col;
	int ar[100][100];
	scanf("%d %d",&row,&col);
	for(i=0;i<row;i++)
		for(j=0;j<col;j++)
		scanf("%d",&ar[i][j]);
	int sum=0;
	for(i=0;i<row;i++)
	{
		   sum+=ar[i][i];
	}
	printf("\n%d",sum);
}

Problem 2:
Input									Output
1      2    3                            
41    5    6                                                                                                            3   41  87  
7     87   9
Description:-You need to identify the large number from each row in the given input. For the given test case in the first row the large number is 3, second row large number is 41 and third row the large number is 87 so that output will be 3 41 87.

#include<stdio.h>
int main()
{
	int max,i,j,row,col;
	int ar[100][100];
               printf(“Enter dimensions for array : “);
	scanf("%d %d",&row,&col);
	for(i=0;i<row;i++)
              {
		for(j=0;j<col;j++)
                             {
		           scanf("%d",&ar[i][j]);
                             }
            }
            for(i=0;i<row;i++)
           {
		max=ar[i][0];
		for(j=0;j<col;j++)
		{
			if(max<ar[i][j])
			max=ar[i][j];
		}
		printf("%d ",max);
	}
}

5.  Write a C++ program to compute the area of circle, rectangle and triangle (given with 3 sides) by overloading the area ( ) function.
#include<iostream>
using namespace std;
float area(int r)
{
	float a=3.14*r*r;
	return a;
}
int area(int l,int b)
{
 	int a=l*b;
 	return a;
}
float area(float b,float h)
{
	float a=0.5*b*h;
	return a;
}
int main()
{
	int r,l,b;
	float base,h;
              cout<<”Enter value for radius : “;
	cin>>r;
              cout<<”Enter value for length & breadth : “;
              cin>>l>>b;
             cput<<”Enter value for base and height of triangle : “l
	cin>>base>>h;
	cout<<"Area of circle             : "<<area(r);
	cout<<"\nArea of rectangle  : "<<area(l,b);
	cout<<"\nArea of triangle     : "<<area(base,h);
	return 0;
}

5.2) Write a C++ program to add  i) two integer numbers ii) two float numbers iii) One integer and one float numbers by using function overloading concept.
#include<iostream>
using namespace std;
int add(int l,int b)
{
 	return l+b;
}
float add(float b,float h)
{
	return b+h;
}

float add(float b,int h)
{
	return b+h;
}
int main()
{
	int a1,a2;
	float b,a;
              cout<<”Enter 2 Integers : “;
	cin>>a1>>a2;
              cout<<”Enter  2 float values : “;
	cin>>a>>b;
	cout<<"Addition of integers   : "<<add(a1,a2);
	cout<<"\nAddition of floats   : "<<add(a,b);
	cout<<"\nAddition of the combination is : "<<add(a,a1);
	return 0;
}
6.The program must accept a string S as the input. The program must toggle the case of vowels in the string S. Then the program must print the modified string as the output.
Input									Output
EquilIbriUm                                                                                                             eqUIlibrIum
#include<stdio.h>
#include<stdlib.h>
int main()
{
    char st[100];
	int i,count=0;
    scanf("%s",st);
    for(i=0;st[i];i++)
    {
     if(st[i]=='a'||st[i]=='e'||st[i]=='o'||st[i]=='u'||st[i]=='i'||st[i]=='A'||st[i]=='E'||st[i]=='O'||    st[i]=='U'||st[i]=='I')
     {
    	if(st[i]>=65 && st[i]<91)
    		st[i]+=32;
    	else if(st[i]>=97 && st[i]<122)
    		st[i]-=32}
   }
   printf("%s",st);
}
Problem 1:
Input 									Output
orange 									puboif
working  								apuojoi
Description :-You need to print the next vowel in the alphabet list if the current character is consonant and you need to print the consonant for the vowel in the alphabet list.

#include<stdio.h>
int main()
{
  char st[100];
  int i;
 printf(“Enter a String : “);
  scanf("%s",st);
  for(i=0;st[i];i++)
  {
    if(st[i]=='a'||st[i]=='e'||st[i]=='o'||st[i]=='u'||st[i]=='i')
	st[i]+=1;	
	else
	{
		if(st[i]>'a' && st[i]<'e')
		 st[i]='e';
		else if(st[i]>'e' && st[i]<'i')
		st[i]='i';
		else if(st[i]>'i' && st[i]<'o')
		st[i]='o';
		else if(st[i]>'o' && st[i]<'u')
		st[i]='u';
		else if(st[i]>'u')
		st[i]='a';
	}
  }
  printf("%s",st);  
}

7.Write a C program to print the following pattern
1
2  3
4  5  6
7   8  9 10
11 12 13 14 15

#include<stdio.h>
int main()
{
  int n,k=1;
  scanf("%d",&n);
  int i,j;
  for(i=0;i<n;i++)
  {
       for(j=0;j<=i;j++)
       {
  	 printf("%d ",k++);
       }
        printf("\n");
  }
}
Alphabetic Pattern
A
B C
D E F
G H I J
K L M N O
#include<stdio.h>
int main()
{
  int n;
  char k='A';
  scanf("%d",&n);
  int i,j;
  for(i=0;i<n;i++)
  {
  	for(j=0;j<=i;j++)
  	 printf("%c ",k++);
  	printf("\n");
  }
}
